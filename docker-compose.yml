services:
  # Backend Service
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: barbershop_backend
    restart: unless-stopped
    env_file:
      - backend/.env
    environment:
      - NODE_ENV=production
      - TZ=Europe/Bucharest
    # IMPORTANT: Nu expunem portul 5000 în exterior, doar în rețeaua Docker
    expose:
      - "5000"
    networks:
      - barbershop-network
    volumes:
      - backend_logs:/app/logs
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # ELIMINAT: depends_on mongo (nu mai avem MongoDB local)
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Frontend/Nginx Service
  frontend:
    build:
      context: .
      dockerfile: frontend.Dockerfile
    container_name: barbershop_frontend
    restart: unless-stopped
    environment:
      - TZ=Europe/Bucharest
    # Expunem porturile 80 și 443 pentru HTTP și HTTPS
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - barbershop-network
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # Volume pentru certificatele SSL
      - letsencrypt_certs:/etc/letsencrypt:ro
      - letsencrypt_www:/var/www/certbot
      - nginx_logs:/var/log/nginx
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M


  # Certbot pentru SSL (Let's Encrypt)
  certbot:
    image: certbot/certbot:latest
    container_name: barbershop_certbot
    volumes:
      - letsencrypt_certs:/etc/letsencrypt
      - letsencrypt_www:/var/www/certbot
    # Rulează doar când e necesar (nu ca serviciu permanent)
    profiles:
      - ssl

networks:
  barbershop-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  # ELIMINAT: mongo_data și mongo_config (nu mai avem MongoDB local)
  backend_logs:
    driver: local
  nginx_logs:
    driver: local
  letsencrypt_certs:
    driver: local
  letsencrypt_www:
    driver: local